name: Development Deployment

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, development]
    environment: development

    steps:
      - name: Stop and remove containers (preserve volumes)
        run: |
          docker-compose down || true
          docker rm -f hashland-api hashland-mongo hashland-redis || true

      - name: Remove perf.log for Winston (fix permission issue)
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S rm -f /home/githubrunner/actions-runner/_work/hashland-api/hashland-api/logs/perf.log

      - name: Remove artifacts
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S rm -rf /home/githubrunner/actions-runner/_work/hashland-api/hashland-api/dist
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S rm -rf /home/githubrunner/actions-runner/_work/hashland-api/hashland-api/node_modules

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure logs folder exists # For Winston logs
        run: mkdir -p ./logs

      - name: Create .env file
        run: |
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" > .env
          echo "DATABASE_NAME=main" >> .env
          echo "JWT_EXPIRATION=24h" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MONGO_URI=mongodb://${{ secrets.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@mongo:27017/main?authSource=admin&replicaSet=rs0" >> .env
          echo "MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}" >> .env
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "PORT=8080" >> .env
          echo "REDIS_URI=redis://redis:6379" >> .env
          echo "REDIS_PRIMARY_ONLY=true" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TON_API_KEY=${{ secrets.TON_API_KEY }}" >> .env
          echo "TON_API_ENDPOINT=${{ secrets.TON_API_ENDPOINT }}" >> .env
          echo "ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}" >> .env
          echo "TON_RECEIVER_ADDRESS=${{ secrets.TON_RECEIVER_ADDRESS }}" >> .env
          echo "TON_X_API_KEY=${{ secrets.TON_X_API_KEY }}" >> .env
          echo "NODE_ENV=development" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "EVM_RECEIVER_ADDRESS=${{ secrets.EVM_RECEIVER_ADDRESS }}" >> .env
          echo "MIXPANEL_PROJECT_TOKEN=${{ secrets.MIXPANEL_PROJECT_TOKEN }}" >> .env
          echo "ADMIN_API_KEY=${{ secrets.ADMIN_API_KEY }}" >> .env
          echo "HASHLAND_URL=${{ secrets.HASHLAND_URL }}" >> .env
  
      - name: Deploy with Docker Compose
        run: |
          docker-compose up -d 