name: Development Deployment

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, development]
    environment: development

    steps:
      - name: Remove container
        run: |
          docker rm -f hashland-api

      - name: Remove artifacts
        run: |
          rm -rf /home/githubrunner/actions-runner/_work/hashland-api/hashland-api/dist
          rm -rf /home/githubrunner/actions-runner/_work/hashland-api/hashland-api/node_modules

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}" > .env
          echo "DATABASE_NAME=main" >> .env
          echo "JWT_EXPIRATION=24h" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MONGO_URI=mongodb://${{ secrets.MONGO_USERNAME }}:${{ secrets.MONGO_PASSWORD }}@mongo:27017/main?authSource=admin" >> .env
          echo "MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}" >> .env
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
          echo "PORT=8080" >> .env
          echo "REDIS_URI=redis://redis:6379" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "TON_API_KEY=${{ secrets.TON_API_KEY }}" >> .env
          echo "TON_API_ENDPOINT=${{ secrets.TON_API_ENDPOINT }}" >> .env
          echo "ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}" >> .env
          echo "TON_RECEIVER_ADDRESS=${{ secrets.TON_RECEIVER_ADDRESS }}" >> .env
          echo "TON_X_API_KEY=${{ secrets.TON_X_API_KEY }}" >> .env
          echo "NODE_ENV=development" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
      
      - name: Deploy with docker-compose
        run: |
          docker compose down
          docker compose up -d 